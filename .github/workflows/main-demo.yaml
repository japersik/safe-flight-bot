name: CI
on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: "japersik/save-flight-bot"
  CONTAINER_NAME: "save-flight-bot-container"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
      - name: Login to dockerhub
        uses: docker/login-action@v1
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push container image
        run: docker buildx create --use && docker buildx build --platform=linux/amd64,linux/arm64,linux/arm/v7 -t $(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) --push .

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Deploy to server via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.HOST_PORT }}
          envs: IMAGE_NAME,GITHUB_SHA,CONTAINER_NAME
          script: |
            # Login into Digital Ocean Registry
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}
            # Stop running container
            docker stop $(echo $CONTAINER_NAME)
            # Remove old container
            docker rm $(echo $CONTAINER_NAME)
            # Set env variables
            export TG_BOT_TOKEN=${{ secrets.TG_TOKEN }}
            # Run a new container from a new image
            docker run -e TG_BOT_TOKEN -d -it \
            --restart always \
            --name $(echo $CONTAINER_NAME) \
            $(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)